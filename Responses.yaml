components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: bearer token
      description: The token you generated by calling Coursera's OAuth generate token endpoint.
  schemas:
    Pagination:
      description: "Pagination variables. There are two parts: “next” is the index of the first result in the next page of results, and “total” is the total number of results. The “next” field is omitted if there are no more results following the last one in the current response."
      type: object
      nullable: false
      properties:
        next:
          type: string
          description: The index of the first result in the next page of results.
          example: 101
        total:
          type: integer
          description: The total number of results available.
          format: int32
          example: 1000
      required:
        - total
      example:
        next: 10
        total: 200

    BusinessOrganizations:
      type: object
      properties:
        elements:
          nullable: false
          type: array
          description: The organization data returned in a list format.
          items:
            $ref: "#/components/schemas/BusinessOrganization"
        paging:
          nullable: false
          description: Pagination information
          $ref: "#/components/schemas/Pagination"
        linked:
          type: object
      example:
        elements:
          - name: Coursera
            id: adfb3s89nghjxm
            slug: coursera
        paging:
          total: 1
        linked: {}

    BusinessOrganization:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the organization.
          example: adfb3s89nghjxm
        name:
          type: string
          description: The name of the organization.
          example: Coursera
        slug:
          type: string
          description: The slug the organization.
          example: coursera
      required:
        - id
        - name
        - slug
      example:
        id: adfb3s89nghjxm
        name: Coursera
        slug: coursera

    BusinessOrganizationUsers:
      type: object
      properties:
        elements:
          nullable: false
          type: array
          description: The organization users data returned in a list.
          items:
            $ref: "#/components/schemas/BusinessOrganizationUser"
        paging:
          nullable: false
          description: Pagination information
          $ref: "#/components/schemas/Pagination"
        linked:
          type: object
      example:
        elements:
          - externalId: user_external_id_1
            fullName: John Doe
            id: user_coursera_account_id_1
            email: user.name1@coursera.org
            membershipProgramIds:
              - enrolled_program_id_1
              - enrolled_program_id_2
          - externalId: user_external_id_2
            fullName: Joe Smith
            id: user_coursera_account_id_2
            email: user.name2@coursera.org
            membershipProgramIds:
              - enrolled_program_id_1
          - externalId: user_external_id_3
            fullName: Dave Ryder 
            id: user_coursera_account_id_3
            email: user.name3@coursera.org
            membershipProgramIds:
              - enrolled_program_id_2
        paging:
          next: 3
          total: 6
        linked: {}

    BusinessOrganizationUser:
      type: object
      properties:
        externalId: 
          type: string
          description: The external id for the user.
          example: user_external_id
        fullName: 
          type: string
          description: The fullname for the user.
          example: John Doe
        id: 
          type: string
          description: The user id.
          example: userId
        email:
          type: string
          description: The user's email address.
          example: user@coursera.org
        membershipProgramIds:
          type: array
          description: A list of program ids the user enrolled in.
          items:
            type: string
          example:
            - program_id_1
            - program_id_2
      required:
        - externalId
         - fullName
        - id
        - email
        - membershipProgramIds
      example:
        externalId: user_external_id
        fullName: John Doe
        id: userId
        email: user@coursera.org
        membershipProgramIds:
          - program_id_1
          - program_id_2

    EnterpriseUserResourceModel:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the user.
        externalId:
          type: string
          description: The external identifier for the user.
        fullName:
          type: string
          description: The name of the user.
        email:
          type: string
          description: Email of the user.
        invitationProgramIds:
          type: array
          description: The program IDs this user is invited to.
          items:
            type: string
        membershipProgramIds:
          type: array
          description: The program IDs this user is a member of.
          items:
            type: string

    EnterpriseUserDataUpdateRequest:
      oneOf:
        - $ref: '#/components/schemas/EnterpriseUserFullNameUpdate'
        - $ref: '#/components/schemas/EnterpriseUserEmailUpdate'
        - $ref: '#/components/schemas/EnterpriseUserExternalIdUpdate'
        - $ref: '#/components/schemas/EnterpriseUserFullNameAndExternalIdUpdate'

    EnterpriseUserFullNameUpdate:
      type: object
      properties:
        typeName:
          type: string
          description: Must be "fullNameUpdate".
          example: fullNameUpdate
        definition:
          type: object
          properties:
            fullName:
              type: string
              description: The user's updated full name.
              example: fullname updated
      required:
        - typeName
        - definition

    EnterpriseUserEmailUpdate:
      type: object
      properties:
        typeName:
          type: string
          description: Must be "emailUpdate".
          example: emailUpdate
        definition:
          type: object
          properties:
            email:
              type: string
              description: The user's updated email address.
              example: updatedemail@coursera.org
      required:
        - typeName
        - definition

    EnterpriseUserExternalIdUpdate:
      type: object
      properties:
        typeName:
          type: string
          description: Must be "externalIdUpdate".
          example: externalIdUpdate
        definition:
          type: object
          properties:
            externalId:
              type: string
              description: The user's updated external id.
              example: updated_external_id
      required:
        - typeName
        - definition

    EnterpriseUserFullNameAndExternalIdUpdate:
      type: object
      properties:
        typeName:
          type: string
          description: Must be "fullNameAndExternalIdUpdate".
          example: fullNameAndExternalIdUpdate
        definition:
          type: object
          properties:
            fullName:
              type: string
              description: The user's updated full name.
            externalId:
              type: string
              description: The user's updated external id.
      required:
        - typeName
        - definition

    EnterpriseProgramUserUpdateRequest:
      type: object
      properties:
        externalId:
          type: string
          description: The external id for the user.
          example: user_external_id
        fullName:
          type: string
          description: The fullname of the user.
          example: John Doe
        email:
          type: string
          description: The email for the user.
          example: user@coursera.org
      example:
        externalId: user_external_id_updated
        fullName: John Doe
        email: John.Doe@coursera.org

    EnterpriseProgramUserUpdateResponse:
      type: object
      properties:
        externalId:
          type: string
          description: The external id for the user.
          example: user_external_id
        fullName:
          type: string
          description: The fullname of the user.
          example: John Doe
        email:
          type: string
          description: The email for the user.
          example: user@coursera.org
        id:
          type: string
          description: The id for the user.
          example: user_id
      example:
        externalId: user_external_id_updated
        fullName: John Doe
        email: John.Doe@coursera.org 
        id: user_id

    BusinessPrograms:
      type: object
      properties:
        elements:
          nullable: false
          type: array
          description: A paginated list of active learning programs.
          items:
            $ref: "#/components/schemas/BusinessProgram"
        paging:
          nullable: false
          description: Pagination information
          $ref: "#/components/schemas/Pagination"
        linked:
          type: object
      example:
        elements:
          - id: yePXtnxXEeaUlQqXZbuV2w
            name: Learning & Leadership
            tagline: Everyone at GlobeLand can learn to be a leader!
            url: https://www.coursera.org/programs/learning-and-leadership
            contentIds:
              - contentId: GdeNrll1EeSROyIACtiVvg
                contentType: Course
              - contentId: Wl5ych5kEeWFIxLDnS6_kQ
                contentType: Course
          - id: yePXtnxXEeaUlQqXZbuV2w
            name: Business Analytics
            tagline: Achieve fluency in business data strategies
            url: https://www.coursera.org/programs/cx-business-analytics
            contentIds:
              - contentId: utjeMEgmEeWJSQ6Y2aPmQQ
                contentType: Specialization
        paging:
          next: 3
          total: 6
        linked: {}

    BusinessProgram:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the program.
          example: k6a7z5K_Ee2fXxKzGPkj0q
        name:
          type: string
          description: The name of the program.
          example: Learning Program
        tagline:
          type: string
          description: A phrase or short sentence that describes the program.
          example: Start learning on Coursera!
        url:
          type: string
          description: The URL of the landing page of the program on Coursera. If an SSO integration is configured with your Coursera program and you would like to automatically attempt SSO login, you can add the &attemptSSOLogin=true parameter to your program URL.
          example: https://www.coursera.org/programs/learning-program-uzmjj
        contentIds:
          type: array
          description: "Identifier of courses and specializations in the program. Each content identifier has two parts: contentId and contentType. The value of contentID is a unique identifier for each piece of content. The value of contentType is either “Course” or “Specialization”. The metadata of each content item can be obtained from the content API."
          items:
            $ref: '#/components/schemas/ContentId'
      required:
        - id
        - name
        - url
        - contentIds
      example:
        id: o_WE-lSKEe2PjQ6LI4ch6Q
        name: Test Program A
        tagline: This is a test
        url: https://www.coursera.org/programs/test-program-2-mdjzv
        contentIds:
          - contentId: aRxESQNMEeuH3Q6N8dCjzw
            contentType: Specialization

    ContentId:
      description: "Identifier of courses and specializations in the program. Each content identifier has two parts: contentId and contentType. The value of contentID is a unique identifier for each piece of content. The value of contentType is either “Course” or “Specialization”. The metadata of each content item can be obtained from the content API."
      type: object
      properties:
        contentId:
          type: string
          description: The unique identifier for the content item.
          example: __y3wBnnEeW9dA4X94-nLQ
        contentType:
          type: string
          enum: [Course, Specialization, SkillSet, Video]
          description: The type of content.
          example: Course
      required:
        - contentId
        - contentType
      example:
        contentId: 2A8MvMcxEeieTBJlTprJmg
        contentType: Course

    Content:
      type: object
      properties:
        subtitleLanguageCodes:
          type: array
          description: A list of available ISO two letter language code for subtitle.
          items:
            type: string
          example:
            - ko
            - fr
            - en
            - de
        difficultyLevel:
          description: The difficulty level of the content.
          type: string
          enum: [BEGINNER, INTERMEDIATE, ADVANCED]
          example: INTERMEDIATE
        contentId:
          description: The identifier for the content.
          type: string
          example: aRxESQNMEeuH3Q6N8dCjzw
        description:
          description: The description of the content.
          type: string
          example: You will learn how to design technologies that bring people joy, rather than frustration. You'll learn how to generate design ideas, techniques for quickly prototyping them, and how to use prototypes to get feedback from other stakeholders like your teammates, clients, and users. You'll also learn principles of visual design, perception, and cognition that inform effective interaction design.
        languageCode:
          description: ISO two letter language code for the content.
          type: string
          example: en
        instructors:
          description: A list of instructor information of the content.
          type: array
          items:
            $ref: "#/components/schemas/Instructor"
        partners:
          description: The partner information who authored the content.
          type: array
          items:
            $ref: "#/components/schemas/Partner"
        name:
          description: The content's name.
          type: string
          example: Interaction Design
        programs:
          description: A list of programs information for the content.
          type: array
          items:
            $ref: "#/components/schemas/Program"
        id:
          description: The unique identifier of the content.
          type: string
          example: Specialization~ZxUbYRX3EeWXAyIAC0mP-A
        extraMetadata:
          description: An object that provides extra data of the content. If the content is a specialization, this field contains the course IDs that are in that specialization and taglines. If the content is a course, this field contains information about upcoming sessions of the course, a link to the course thumbnail image (promoPhoto), a list of skills with skill id and name that it develop (skills) and estimated learning time in seconds (estimatedLearningTime). If the content is a Video (also known as a Clip), this field contains the parent course Id the Clip belongs to, the parent lesson's name and object URL, the estimated learning time, the Clip's skill tags, and the URL of its promo photo.
          type: object
          oneOf:
            - $ref: '#/components/schemas/ClipMetadata'
            - $ref: '#/components/schemas/SpecializationMetadata'
            - $ref: '#/components/schemas/CourseMetadata'
        contentType:
          description: The type of the content.
          type: string
          enum: [Course, Specialization, Video]
          example: Specialization
        slug:
          description: The content URI slug associated with this content
          type: string
          example: interaction-design
      example:
        subtitleLanguageCodes:
          - ar
          - el
        difficultyLevel: BEGINNER
        contentId: NCeDsBYkEeqLoA4isQbUEQ
        description: Organizations are undergoing enormous changes in their structures and processes as they seek to take advantage of innovations in technology, remain competitive in Globalising markets, and deal with the increasing diversity of their staff, customers, and supply chains. The four subjects in this specialisation will examine the personal implications of the changing organizational environment - the need to continuously adapt and learn, to manage your career, to build up resilience against stress, and to take your place as a global citizen.\n\nThe aim is to enable you to thrive in working in contemporary organsations. 'Improve yourself Always' addresses the need for you to continuously develop and seeks to improve your capacity to learn and adapt. 'Build Personal Resilience' helps you enhance your resilience in the face of the pressures you will experience in working in contemporary organizations. 'Your Career Your Life' guides you in taking more responsibility for mapping out and engaging in your career. 'Become a Global Citizen' discusses the need to see yourself as a citizen of the increasingly global world of work and provides insight into the strategies to deal with cultural diversity.
        languageCode: en
        instructors:
          - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/8f/5286b350a344f1bc7afb5c444efe5d/Paul-Nesbit.jpg
            name: Associate Professor Paul Nesbit
            title: Department of Management
            department: Macquarie Business School
          - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/59/5bddd7220c49c8be0f2947f7bccd4e/Fei-Guo.jpg
            name: Professor Fei Guo
            title: Department of Management
            department: Macquarie Business School

        partners:
          - name: Macquarie University
            logoUrl: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/18/4f8810c1ef11e8b60f99300567ca1c/MQ-Logo-HOR-160-60-proportions-_1_.png
        name: "Adapting: Career Development"
        programs:
          - contentUrl: https://www.coursera.org/programs/learning-program-uzmjj?productId=NCeDsBYkEeqLoA4isQbUEQ&productType=s12n&showMiniModal=true&isExternal=true
            programId: k6a7z5K_Ee2fXxKzGPkj0Q
          - contentUrl: https://www.coursera.org/programs/test-program-1-lvseg?productId=NCeDsBYkEeqLoA4isQbUEQ&productType=s12n&showMiniModal=true&isExternal=true
            programId: y0TO1t4fEe2bIBLACu-NKQ
        id: Specialization~NCeDsBYkEeqLoA4isQbUEQ
        extraMetadata:
          typeName: specializationMetadata
          definition:
            courseIds:
              - contentId: HmixIaXTEeiL8hKwqznX5g
                contentType: Course
              - contentId: loupJKZbEeiLXw4QLApQMg
                contentType: Course
            promoPhoto: https://d15cw65ipctsrr.cloudfront.net/b6/7c87dbaf2a4c3e88842c174c878b98/Adapting_Become-a-global-citizen_2.jpg
            tagline: ""
          contentType: Specialization
          slug: adapting-career-development

    ClipMetadata:
      description: The extraMetadata format for a Clip, a short form video content item. It contains additional metadata that is specific to a Clip, such as the Clip's parent course or its skill tags. By default, Clips are not enabled as part of a content listing. If you'd like to enable Clips for your org, please get in touch with your Coursera Customer Success Manager. Enabling Clips will significantly expand the volume of content coming through your integration. Clips can either be enabled as their own separate content type or they can be masked as Courses to fit into your legacy integration.
      type: object
      properties:
        typeName:
          type: string
          example: clipMetadata
        definition:
          type: object
          properties:
            parentLessonName:
              type: string
              example: "Lesson 5.1: The Product Lifecycle"
            parentLessonObjectUrl:
              type: string
              example: /videos/digital-transformation-course/1xx87
            estimatedLearningTime:
              type: integer
              example: 208
            skillTags:
              type: array
              items:
                type: object
                properties:
                  skillName:
                    type: string
                    example: Cloud Computing
                  skillId:
                    type: string
                    example: cloud-computing
            promoPhoto:
              type: string
              example: https://dade2fwib5xi6.cloudfront.net/jmlmW4bhRCipZluG4bQovg.processed/thumbnails/360p/1.jpg
            parentCourseId:
              type: string
              example: course~5HkvbTHIEeyJLwrWUTXNdQ
      example:
        typeName: clipMetadata
        definition:
          parentLessonName: "Lesson 5.1: The Product Lifecycle"
          parentLessonObjectUrl: /videos/digital-transformation-course/1xx87
          estimatedLearningTime: 208
          skillTags:
            - skillName: Cloud Computing
              skillId: cloud-computing
            - skillName: Internet Of Things
              skillId: internet-of-things
          promoPhoto: https://dade2fwib5xi6.cloudfront.net/jmlmW4bhRCipZluG4bQovg.processed/thumbnails/360p/1.jpg
          parentCourseId: course~5HkvbTHIEeyJLwrWUTXNdQ

    SpecializationMetadata:
      description: The extraMetadata format for a Specialization. It contains additional metadata that is specific to a Specialization, such as which courses make up the Specialization.
      type: object
      properties:
        typeName:
          type: string
          example: specializationMetadata
        definition:
          type: object
          properties:
            courseIds:
              type: array
              items:
                type: object
                properties:
                  contentId:
                    type: string
                    example: zUFl3XEiEeWKsgrp3VnvAw
                  contentType:
                    type: string
                    example: Course
            promoPhoto:
              type: string
              example: https://d15cw65ipctsrr.cloudfront.net/28/2aba40f67a11e59154758511c55a0a/photo-1434626881859-194d67b2b86f.jpg
            tagline:
              type: string
              example: Develop Your Marketing Strategy
      example:
        typeName: specializationMetadata
        definition:
          courseIds:
            - contentId: zUFl3XEiEeWKsgrp3VnvAw
              contentType: Course
            - contentId: p47P8W3pEeWG0w42Sx-Gkw
              contentType: Course
          promoPhoto: https://d15cw65ipctsrr.cloudfront.net/28/2aba40f67a11e59154758511c55a0a/photo-1434626881859-194d67b2b86f.jpg
          tagline: Develop Your Marketing Strategy

    CourseMetadata:
      description: The extraMetadata format for a Course. It contains additional metadata that is specific to Courses, such as skill tags or estimated learning time.
      type: object
      properties:
        typeName:
          type: string
          example: courseMetadata
        definition:
          type: object
          properties:
            skills:
              type: array
              items:
                type: object
                properties:
                  skillName:
                    type: string
                    example: Communication
                  skillId:
                    type: string
                    example: communication
            estimatedLearningTime:
              type: integer
              example: 15689
            promoPhoto:
              type: string
              example: https://coursera-course-photos.s3.amazonaws.com/2b/2db4b146634b0fa5889d8fe6c053bd/salesimage.jpg
            domainTypes:
              type: array
              items:
                type: object
                properties:
                  domain:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Business
                      domainId:
                        type: string
                        example: business
                  subdomain:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Business Essentials
                      subdomainId:
                        type: string
                        example: business-essentials
      example:
        typeName: courseMetadata
        definition:
          skills:
            - skillName: Communication
              skillId: communication
            - skillName: Problem Solving
              skillId: problem-solving
          estimatedLearningTime: 15689
          promoPhoto: https://coursera-course-photos.s3.amazonaws.com/2b/2db4b146634b0fa5889d8fe6c053bd/salesimage.jpg
          domainTypes:
            - domain:
                name: Business
                domainId: business
              subdomain:
                name: Business Essentials
                subdomainId: business-essentials
            - domain:
                name: Business
                domainId: business
              subdomain:
                name: Leadership and Management
                subdomainId: leadership-and-management

    ContentList:
      type: object
      properties:
        elements:
          description: A list of content objects.
          type: array
          items:
            $ref: "#/components/schemas/Content"
        paging:
          description: Pagination information.
          type: object
          properties:
            next:
              description: The index of the first result in the next page of results.
              example: 101
              type: string
            total:
              description: The total number of results available.
              example: 1000
              type: integer
              format: int32
        linked:
          type: object
          nullable: true
      example:
        elements:
          - subtitleLanguageCodes:
              - ko
            difficultyLevel: INTERMEDIATE
            contentId: aRxESQNMEeuH3Q6N8dCjzw
            description: This specialization is intended for aspiring learners and professionals seeking to hone their skills in the quantitative finance area. Through a series of 5 courses, we will cover derivative pricing, asset allocation, portfolio optimization as well as other applications of financial engineering such as real options, commodity and energy derivatives and algorithmic trading. Those financial engineering topics will prepare you well for resolving related problems, both in the academic and industrial worlds.
            languageCode: en
            instructors:
              - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/adfbasdf.jpeg
                name: Joe Doe 1
                title: Tang Family Professor
                department: Industrial Engineering and Operations Research Department
              - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/afdasdf.jpg
                name:  Joe Doe 2
                title: Professor of Professional Practice
                department: Department of Industrial Engineering and Operations Research

            partners:
              - name: Columbia University
                logoUrl: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera-university-assets.s3.amazonaws.com/9b/42f2eca2f10769400d1f8519892413/ColumbiaLOGO.png
            name: Financial Engineering and Risk Management
            programs:
              - contentUrl: https://www.coursera.org/programs/learning-program-uzmjj?productId=aRxESQNMEeuH3Q6N8dCjzw&productType=s12n&showMiniModal=true&isExternal=true
                programId: k6a7z5K_Ee2fXxKzGPkj0Q
              - contentUrl: https://www.coursera.org/programs/test-program-1-lvseg?productId=aRxESQNMEeuH3Q6N8dCjzw&productType=s12n&showMiniModal=true&isExternal=true
                programId: y0TO1t4fEe2bIBLACu-NKQ
            id: Specialization~aRxESQNMEeuH3Q6N8dCjzw
            extraMetadata:
              typeName: specializationMetadata
              definition:
                courseIds:
                  - contentId: MzfG3f9QEei65w7Gl4XZlA
                    contentType: Course
                  - contentId: NyzO9f9QEeiU2RImQolf6g
                    contentType: Course
                promoPhoto: https://d15cw65ipctsrr.cloudfront.net/b9/0c619aede341858f59410b70c1178a/shutterstock_1923576143-1-.jpg
                tagline: Advance Your Knowledge in Financial Engineering
              contentType: Specialization
              slug: financialengineering
          - subtitleLanguageCodes:
              - ar
              - el
            difficultyLevel: BEGINNER
            contentId: NCeDsBYkEeqLoA4isQbUEQ
            description: Organizations are undergoing enormous changes in their structures and processes as they seek to take advantage of innovations in technology, remain competitive in Globalising markets, and deal with the increasing diversity of their staff, customers, and supply chains. The four subjects in this specialisation will examine the personal implications of the changing organizational environment - the need to continuously adapt and learn, to manage your career, to build up resilience against stress, and to take your place as a global citizen.\n\nThe aim is to enable you to thrive in working in contemporary organsations. 'Improve yourself Always' addresses the need for you to continuously develop and seeks to improve your capacity to learn and adapt. 'Build Personal Resilience' helps you enhance your resilience in the face of the pressures you will experience in working in contemporary organizations. 'Your Career Your Life' guides you in taking more responsibility for mapping out and engaging in your career. 'Become a Global Citizen' discusses the need to see yourself as a citizen of the increasingly global world of work and provides insight into the strategies to deal with cultural diversity.
            languageCode: en
            instructors:
              - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/asdfasdf.jpg
                name: Joe Doe 1
                title: Department of Management
                department: Macquarie Business School
              - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/adfasdf.jpg
                name: Joe Doe 2
                title: Department of Management
                department: Macquarie Business School

            partners:
              - name: Macquarie University
                logoUrl: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/18/4f8810c1ef11e8b60f99300567ca1c/MQ-Logo-HOR-160-60-proportions-_1_.png
            name: "Adapting: Career Development"
            programs:
              - contentUrl: https://www.coursera.org/programs/learning-program-uzmjj?productId=NCeDsBYkEeqLoA4isQbUEQ&productType=s12n&showMiniModal=true&isExternal=true
                programId: k6a7z5K_Ee2fXxKzGPkj0Q
              - contentUrl: https://www.coursera.org/programs/test-program-1-lvseg?productId=NCeDsBYkEeqLoA4isQbUEQ&productType=s12n&showMiniModal=true&isExternal=true
                programId: y0TO1t4fEe2bIBLACu-NKQ
            id: Specialization~NCeDsBYkEeqLoA4isQbUEQ
            extraMetadata:
              typeName: specializationMetadata
              definition:
                courseIds:
                  - contentId: HmixIaXTEeiL8hKwqznX5g
                    contentType: Course
                  - contentId: loupJKZbEeiLXw4QLApQMg
                    contentType: Course
                promoPhoto: https://d15cw65ipctsrr.cloudfront.net/b6/7c87dbaf2a4c3e88842c174c878b98/Adapting_Become-a-global-citizen_2.jpg
                tagline: ""
              contentType: Specialization
              slug: adapting-career-development
        paging:
          next: 3
          total: 5
        linked: {}

    Instructor:
      type: object
      properties:
        photoUrl:
          description: Link to an instructor's photo.
          type: string
          example: https://coursera-instructor-photos.s3.amazonaws.com/55/1598d0b39311e38a126105d9012d0a/Sara-McNeil-Conference-Bio-and-Photo.jpg
        name:
          description: Name of an instructor.
          type: string
          example: Sara G. McNeil
        title:
          description: Instructor's title.
          type: string
          example: Associate Professor
        department:
          description: Instructor's department
          type: string
          example: Curriculum and Instruction
      example:
        photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/ed/4e952e49774d35801f70135f943fe2/dougheadshot.jpg
        name: Douglas C. Montgomery
        title: Regents’ Professor of Engineering, ASU Foundation Professor of Engineering
        department: School of Computing, Informatics, and Decision Systems Engineering

    Partner:
      type: object
      properties:
        name:
          description: partner name
          type: string
          example: University of Houston
        logoUrl:
          description: Link to a partner's logo
          type: string
          example: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/cd/cf3e539ad1419fb2248c69d66d7419/UH160x60.png
      example:
        name: Arizona State University
        logoUrl: https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/f1/8e498020ba11e89a42eb9ee9885b3e/asu_university_vert_rgb_maroongold_150-_1_.png

    Program:
      type: object
      properties:
        contentUrl:
          description: A link to the content of a program
          type: string
          example: https://www.coursera.org/programs/learning-program-uzmjj?productId=NJYWSWekEeqjdBJdNl41sw&productType=s12n&showMiniModal=true&isExternal=true
        programId:
          description: A unique identifier of a program
          type: string
          example: k6a7z5K_Ee2fXxKzGPkj0Q
      example:
        contentUrl: https://www.coursera.org/programs/learning-program-uzmjj?productId=MLzyMXXeEeqiJgow-W2CHw&productType=s12n&showMiniModal=true&isExternal=true
        programId: k6a7z5K_Ee2fXxKzGPkj0Q

    CourseMaterials:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of a course
          example: VotHm2ejEeqV5Aor8ms6Fw
        modules:
          type: array
          description: an array of modules in the course
          items:
            $ref: '#/components/schemas/Module'
      example:
        id: gawUVgp9EeuyHQ758rw-Yw
        modules:
          - name: Organizing data to begin analysis
            id: 2Zn9f
            lessons:
              - name: Let's get organized
                id: Edn1U
                items:
                  - itemType: VIDEO
                    name: Introduction to getting organized
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
                    id: 6chA9
                  - itemType: READING
                    name: Course syllabus
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=Bbxbl
                    id: Bbxbl
              - name: Data analysis basics
                id: Q73qz
                items:
                  - itemType: VIDEO
                    name: The analysis process
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=olTet
                    id: olTet
                  - itemType: VIDEO
                    name: "Ayanna: Sticking with it"
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=EzE9X
                    id: EzE9X
          - name: Formatting and adjusting data
            id: aYr3B
            lessons:
              - name: Convert and format data
                id: pnbK4
                items:
                  - itemType: VIDEO
                    name: Getting started with data formatting
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=u1pom
                    id: u1pom
                  - itemType: VIDEO
                    name: From one type to another
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=FOAwr
                    id: FOAwr
              - name: Combine multiple datasets
                id: shwn5
                items:
                  - itemType: READING
                    name: "Optional: Prepare to use the bike sharing dataset in BigQuery"
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=vYBY0
                    id: vYBY0
                  - itemType: VIDEO
                    name: Merging and multiple sources
                    deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=9V6L5
                    id: 9V6L5

    Module:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of a course module
          example: 2Zn9f
        name:
          type: string
          description: A course module name
          example: Organizing data to begin analysis
        lessons:
          type: array
          description: an array of lessons in the module
          items:
            $ref: '#/components/schemas/Lesson'
      example:
        name: Organizing data to begin analysis
        id: 2Zn9f
        lessons:
          - name: Let's get organized
            id: Edn1U
            items:
              - itemType: VIDEO
                name: Introduction to getting organized
                deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
                id: 6chA9
              - itemType: READING
                name: Course syllabus
                deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=Bbxbl
                id: Bbxbl
          - name: Data analysis basics
            id: Q73qz
            items:
              - itemType: VIDEO
                name: The analysis process
                deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=olTet
                id: olTet
              - itemType: VIDEO
                name: "Ayanna: Sticking with it"
                deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=EzE9X
                id: EzE9X

    Lesson:
      type: object
      properties:
        id:
          type: string
          description: A lesson id
          example: Edn1U
        name:
          type: string
          description: A lesson name
          example: Let's get organized
        items:
          type: array
          description: an array of items in the lesson
          items:
            $ref: '#/components/schemas/Item'
      example:
        name: Data analysis basics
        id: Q73qz
        items:
          - itemType: VIDEO
            name: The analysis process
            deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=olTet
            id: olTet
          - itemType: VIDEO
            name: "Ayanna: Sticking with it"
            deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=EzE9X
            id: EzE9X

    Item:
      type: object
      properties:
        id:
          type: string
          description: An item id
          example: 6chA9
        name:
          type: string
          description: An item name
          example: Introduction to getting organized
        itemType:
          type: string
          enum: [VIDEO, READING, QUIZ, PEER_REVIEW, PROGRAMMING_ASSIGNMENT, EXTERNAL_TOOL, LAB, DISCUSSION, PLUGIN, ASSIGNMENT, TEAMMATE_REVIEW, DEPRECATED_OR_NOT_LAUNCHED, UNKNOWN]
          description: An item type.
          example: VIDEO
        deeplinkUrl:
          type: string
          description: deep-link URL to the item (SPECIFIC TO THE PROGRAM). It also enrolls the learner in the course if they are not already enrolled.
          example: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
        weightPercentage:
          type: number
          format: double
          description: The item grading weight in percentages. e.g. 15.5% would be 15.5
          nullable: true
          example: 15.0
        prerequisiteItemId:
          type: string
          description: item ID of the prerequisite item to unlocking this item
          nullable: true
          example: u3xD8
      example:
        itemType: VIDEO
        name: The analysis process
        deeplinkUrl: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=olTet
        id: olTet
        weightPercentage: 15.0
        prerequisiteItemId: u3xD8

    EnrollmentState:
      type: object
      properties:
        elements:
          type: array
          items:
            type: object
            properties:
              contentId:
                type: string
                description: The identifier of the course or specialization
              externalId:
                type: string
                description: The external identifier of the user
              state:
                type: string
                description: The state of the enrollment (e.g., AVAILABLE)
              id:
                type: string
                description: The unique identifier that corresponds to the composed ID in the URL of the request
              contentType:
                type: string
                description: The type of the course content (e.g., Course)
        paging:
          type: object
          description: Pagination information
          $ref: "#/components/schemas/Pagination"
        linked:
          type: object
      example:
        elements:
          - contentId: 6EAVDavbEeaPvQ5eOPtN_A
            externalId: johndoe-sample-infosys-ID
            state: AVAILABLE
            id: johndoe-sample-infosys-ID~Course~6EAVDavbEeaPvQ5eOPtN_A
            contentType: Course
        paging:
          next: 10
          total: 200
        linked: {}

    CurriculumCollectionItem:
      type: object
      properties:
        partners:
          description: partner information.
          type: array
          items:
            $ref: "#/components/schemas/Partner"
        name:
          description: name of the curriculum.
          type: string
          example: The Science of Well-Being
        description:
          description: a description of the curriculum.
          type: string
          example: Some description.
        contentType:
          description: curriculum content type.
          type: string
          example: Course
        slug:
          description: The URI slug associated with this content
          type: string
          example: the-science-of-well-being
        instructors:
          description: instructor information.
          type: array
          items:
            $ref: "#/components/schemas/Instructor"
        extraMetadata:
          description: If the content is a specialization, this field contains the course IDs that are in that specialization and taglines. If the content is a course, this field contains information about upcoming sessions of the course, a link to the course thumbnail image (promoPhoto), a list of skills with skill id and name that it develop (skills) and estimated learning time in seconds (estimatedLearningTime). If the content is a Clip, this field contains the parent course Id the Clip belongs to, the parent lesson's name and object URL, the estimated learning time, and the URL of its promo photo.
          type: object
          properties:
            typeName:
              description: type name of the metadata
              type: string
              enum: [specializationMetadata, courseMetadata, clipMetadata]
              example: courseMetadata
            definition:
              description: some definition of the metadata.
              type: object
              properties:
                promoPhoto:
                  description: link to a promo photo
                  type: string
                  example: https://coursera-course-photos.s3.amazonaws.com/7e/aff5b0f54c11e7b5ae579a0e963c38/Logo_TheScienceofWell-Being.png
                courseIds:
                  description: course id
                  type: array
                  items:
                    $ref: "#/components/schemas/CourseId"
                tagline:
                  description: A phrase or short sentence that describes the content.
                  type: string
                  example: Launch your career in Cloud Networking
      example:
        partners:
          - name:  Yale University
        name: The Science of Well-Being
        description: "NEW TEEN VERSION AVAILABLE HERE: https://www.coursera.org/learn/the-science-of-well-being-for-teens\n\nIn this course you will engage in a series of challenges designed to increase your own happiness and build more productive habits. As preparation for these tasks, Professor Laurie Santos reveals misconceptions about happiness, annoying features of the mind that lead us to think the way we do, and the research that can help us change. You will ultimately be prepared to successfully incorporate a specific wellness activity into your life.\n\nTHE SCIENCE OF WELL BEING WAS PRODUCED IN PART DUE TO THE GENEROUS FUNDING OF THE DAVID F. SWENSEN FUND FOR INNOVATION IN TEACHING."
        id: rUHfSakHEeeQ3gpuC4Fs_g
        contentType: Course
        extraMetadata:
          typeName: courseMetadata
          definition:
            promoPhoto: https://coursera-course-photos.s3.amazonaws.com/7e/aff5b0f54c11e7b5ae579a0e963c38/Logo_TheScienceofWell-Being.png
        slug: the-science-of-well-being
        instructors:
          - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/1b/bd3e80f55211e7b5ae579a0e963c38/Santos_Headshot_Cropped.jpg
            name: Laurie Santos
            title: Professor
            department: Psychology

    CurriculumCollection:
      type: object
      properties:
        elements:
          description: A list of curriculums.
          type: array
          items:
            type: object
            properties:
              contents:
                description: A list of curriculum content detail.
                type: array
                items:
                  $ref: "#/components/schemas/CurriculumCollectionItem"
              description:
                description: A description of the curriculum.
                type: string
                example: Some description.
              id:
                description: id of the curriculum.
                type: string
                example: y0TO1t4fEe2bIBLACu-NKQ~fac3r
              title:
                description: title of the curriculum.
                type: string
                example: 1 person program - FULL Collection
              collectionId:
                description: id of this curriculum collection.
                type: string
                example: fac3r
              programId:
                description: id of the program.
                type: string
                example: y0TO1t4fEe2bIBLACu-NKQ
        paging:
          nullable: false
          $ref: "#/components/schemas/Pagination"
        linked:
          type: object
      example:
        elements:
          - contents:
              - partners:
                  - name:  Yale University
                name: The Science of Well-Being
                description: "NEW TEEN VERSION AVAILABLE HERE: https://www.coursera.org/learn/the-science-of-well-being-for-teens\n\nIn this course you will engage in a series of challenges designed to increase your own happiness and build more productive habits. As preparation for these tasks, Professor Laurie Santos reveals misconceptions about happiness, annoying features of the mind that lead us to think the way we do, and the research that can help us change. You will ultimately be prepared to successfully incorporate a specific wellness activity into your life.\n\nTHE SCIENCE OF WELL BEING WAS PRODUCED IN PART DUE TO THE GENEROUS FUNDING OF THE DAVID F. SWENSEN FUND FOR INNOVATION IN TEACHING."
                id: rUHfSakHEeeQ3gpuC4Fs_g
                contentType: Course
                extraMetadata:
                  typeName: courseMetadata
                  definition:
                    promoPhoto: https://coursera-course-photos.s3.amazonaws.com/7e/aff5b0f54c11e7b5ae579a0e963c38/Logo_TheScienceofWell-Being.png
                slug: the-science-of-well-being
                instructors:
                  - photoUrl: https://coursera-instructor-photos.s3.amazonaws.com/1b/bd3e80f55211e7b5ae579a0e963c38/Santos_Headshot_Cropped.jpg
                    name: Laurie Santos
                    title: Professor
                    department: Psychology
            id: y0TO1t4fEe2bIBLACu-NKQ~fac3r
            description: Some description
            title: ""
            collectionId: fac3r
            programId: y0TO1t4fEe2bIBLACu-NKQ
        paging:
          total: 1
        linked: {}

    CourseId:
      type: object
      properties:
        contentId:
          description: Unique id for the course.
          type: string
          example: h9LqVq-lEeauxBIk_RF-8A
        contentType:
          description: tpye of the content.
          type: string
          example: Course
      example:
        contentId: GdeNrll1EeSROyIACtiVvg
        contentType: Course

    EnrollmentReport:
      type: object
      required:
        - id
        - externalId
        - contentId
        - contentType
        - isCompleted
        - enrolledAt
        - membershipState
        - contentName
        - contentSlug
        - programName
        - programSlug
        - partnerNames
        - fullName
        - email
      properties:
        id:
          description: "Unique identifier of the entry. It has three parts, separated by “~”: externalId, contentType, and contentId."
          type: string
          example: sdfsdf2@fake.com~dfsfsdfs~fffg
        externalId:
          description: Unique external identifier for a user, based on SSO credentials or manually set value when inviting learner.
          type: string
          example: sdfsdf2@fake.com
        contentId:
          description: Unique identifier for a “Course” or a “Specialization”.
          type: string
          example: r0GnHOZaEees-Q6jQMxlrg
        contentType:
          description: The contentType will always be “Course” or “Specialization”.
          type: string
          enum: [Course, Specialization]
          example: Course
        isCompleted:
          description: A boolean for course completion status. A course is marked as completed when the user has finished all graded assignments.
          type: boolean
          example: true
        completedAt:
          description: Timestamp for user completed course
          type: integer
          format: int64
          nullable: true
          example: 1568748366896
        grade:
          description: Average percentage score across all graded assignments. Appears only if ‘isCompleted’ is true
          type: string
          nullable: true
          example: 0.922300033569336
        lastActivityAt:
          description: Latest activity timestamp for course
          type: integer
          format: int64
          nullable: true
          example: 1569229361000
        membershipState:
          description: The membership state of the learner. Can be “MEMBER”, “DELETED_MEMBER”, “INVITED”, “INVITED_EMAIL_NOT_VERIFIED”, “WHITELISTED”, “NOT_MEMBER”
          type: string
          enum: [MEMBER, DELETED_MEMBER, INVITED, INVITED_EMAIL_NOT_VERIFIED, WHITELISTED, NOT_MEMBER]
          example: MEMBER
        enrolledAt:
          description: Timestamp for user enrollment in the course.
          type: integer
          format: int64
          example: 1568138449555
        overallProgress:
          description: A number between 0 to 100, highlighting percentage of items completed by the learner. This field is only present when contentType is “Course”.
          type: integer
          format: int64
          nullable: true
          example: 37
        approxTotalCourseHrs:
          description: Numbers of hours that the learner has spent in the course
          type: number
          nullable: true
          example: 2.98
        collectionId:
          description: ID of the collection the learner enrolled through. This field is only present when a learner enrolled in a course or a specialization through a collection on web. Default is empty now.
          type: string
          nullable: true
          example: BXGkm
        collectionName:
          description: Name of the collection that corresponds to collectionId (see above).
          type: string
          nullable: true
          example: collection name
        deletedAt:
          description: Timestamp for membership deletion
          type: integer
          format: int64
          nullable: true
          example: 1568138449555
        updatedAt:
          description: Timestamp for when the table was last updated.
          type: integer
          format: int64
          nullable: true
          example: 1609876543210
        contentName:
          description: Name of the content.
          type: string
          example: Introduction to Programming
        contentSlug:
          description: The slug or URL-friendly version of the content name.
          type: string
          example: introduction-to-programming
        partnerNames:
          description: Name(s) of the partner(s) associated with the content.
          type: array
          items:
            type: string
          example: ["DeepLearning.AI", "Stanford University"]
        contentCertificateUrl:
          description: URL to access the content's certificate.
          type: string
          nullable: true
        fullName:
          description: The learner's full name.
          type: string
          example: John Doe
        email:
          description: The learner's email address.
          type: string
          example: john.doe@example.com
        programName:
          description: The name of the program.
          type: string
          example: Test Learning Program
        programSlug:
          description: The slug or URL-friendly version of the program name.
          type: string
          example: test-learning-program
        contractId:
          description: The identifier of the contract.
          type: string
          nullable: true
          example: MIEbW53xEe2-LxLyVSidHQ
        contractName:
          description: The name of the contract.
          type: string
          nullable: true
          example: "Contract1"
        learnerProfileStandardFields:
          description: Enterprise learner profile standard fields.
          $ref: '#/components/schemas/LearnerProfileStandardFields'
        courseType:
          description: The type of the course.
          type: string
          enum:
            - Course
            - Guided Project
            - Qwiklabs Project
            - Self-Paced Project
            - Short Form Content
          nullable: true
          example: "Course"
        numCoursesInSpecialization:
          description: The number of courses in the specialization.
          type: integer
          format: int64
          example: 4
      example:
        approxTotalCourseHrs: 2.98
        overallProgress: 37
        membershipState: MEMBER
        contentId: r0GnHOZaEees-Q6jQMxlrg
        externalId: sdfsdf2@fake.com
        lastActivityAt: 1569229361000
        id: sdfsdf2@fake.com~dfsfsdfs~fffg
        grade: 0.922300033569336
        contentType: Course
        programId: gywzv9MFEeml3w46OqZe-A
        enrolledAt: 1568138449555
        isCompleted: true
        completedAt: 1568748366896
        updatedAt: 1609876543210
        contentName: Introduction to Programming
        contentSlug: introduction-to-programming
        partnerNames: ["DeepLearning.AI", "Stanford University"]
        contentCertificateUrl: https://example.com/certificate
        fullName: John Doe
        email: john.doe@example.com
        programName: Test Learning Program
        programSlug: test-learning-program
        contractId: MIEbW53xEe2-LxLyVSidHQ
        contract: "Contract details"
        courseType: Course
        numCoursesInSpecialization: 4

    LearnerProfileStandardFields:
      properties:
        managerName:
          description: The name of the learner's manager.
          type: string
          nullable: true
        managerEmail:
          description: The email address of the learner's manager.
          type: string
          nullable: true
        jobTitle:
          description: The job title of the learner.
          type: string
          nullable: true
        jobType:
          description: The type of job the learner has.
          type: string
          nullable: true
        businessUnit:
          description: The business unit the learner belongs to.
          type: string
          nullable: true
        businessUnit2:
          description: A secondary business unit the learner belongs to.
          type: string
          nullable: true
        locationCity:
          description: The city where the learner is located.
          type: string
          nullable: true
        locationRegion:
          description: The region where the learner is located.
          type: string
          nullable: true
        locationCountry:
          description: The country where the learner is located.
          type: string
          nullable: true
      example:
        managerName: John Smith
        managerEmail: john.smith@example.com
        jobTitle: Software Engineer
        jobType: Full-time
        businessUnit: Engineering
        businessUnit2: Product Development
        locationCity: San Francisco
        locationRegion: California
        locationCountry: United States


    EnrollmentReportResponse:
      type: object
      properties:
        elements:
          description: A list of enrollment reports.
          type: array
          items:
            $ref: '#/components/schemas/EnrollmentReport'
        paging:
          nullable: false
          description: Pagination information
          $ref: "#/components/schemas/Pagination"
      example:
        elements:
          - approxTotalCourseHrs: 2.98
            overallProgress: 37
            membershipState: MEMBER
            contentId: r0GnHOZaEees-Q6jQMxlrg
            externalId: sdfsdf2@fake.com
            lastActivityAt: 1569229361000
            id: sdfsdf2@fake.com~dfsfsdfs~fffg
            grade: 0.922300033569336
            contentType: Course
            programId: gywzv9MFEeml3w46OqZe-A
            enrolledAt: 1568138449555
            isCompleted: true
            completedAt: 1568748366896
          - approxTotalCourseHrs: 1.23
            overallProgress: 66
            membershipState: MEMBER
            contentId: 6EAVDavbEeaPvQ5eOPtN_A
            externalId: sdfsdf2@fake.com
            lastActivityAt: 1569229361000
            id: sdfsdf2@fake.com~dfsfsdfs~fffg
            grade: 0.922300033569336
            contentType: Course
            programId: gywzv9MFEeml3w46OqZe-A
            enrolledAt: 1568138449555
            isCompleted: true
            completedAt: 1568748366896
        paging:
          next: 3
          total: 6

    CourseGradebookReport:
      type: object
      properties:
        completedAt:
          description: Timestamp for user completed course
          type: integer
          format: int64
          nullable: true
          example: 1585392590000
        overallProgress:
          description: A number between 0 to 100, highlighting percentage of items completed by the learner.
          type: integer
          format: int32
          example: 72
        approxTotalLearningHrs:
          description: Approximate total learning hours for this course
          type: number
          format: float
          example: 64.41
        fullName:
          description: Full name of the learner based on the name from invitations.
          type: string
          example: Joe Doe
        externalId:
          description: Unique external identifier for a user. If no external identifier is configured, it will be email instead.
          type: string
          example: jdoe@gmail.com
        lastActivityAt:
          description: Latest activity timestamp for course
          type: integer
          format: int64
          nullable: true
          example: 1585392991000
        courseName:
          description: Name of a course
          type: string
          example: Programming for Everybody (Getting Started with Python)
        overallCourseGrade:
          description: A number between 0 to 100 which is the weighted sum of completed graded items
          type: number
          format: float
          example: 96.7
        id:
          description: "Unique identifier of the entry. It has two parts, separated by “~”: externalId, and courseId."
          type: string
          example: jdoe@gmail.com~7A1yFTaREeWWBQrVFXqd1w
        riskFlags:
          description: "An array of risk flags. Possible values are: INACTIVE"
          type: array
          items:
            type: string
          example:
            - INACTIVE
        courseId:
          description: Unique identifier for a course.
          type: string
          example: 7A1yFTaREeWWBQrVFXqd1w
        programId:
          description: Unique identifier for a learning program.
          type: string
          example: gywzv9MFEeml3w46OqZe-A
        itemGradebooks:
          description: A list of details about each graded items in the course.
          type: array
          items:
            $ref: '#/components/schemas/CourseItemGradebook'
          example:
            - itemId: WiLXL
              itemName: Chapter 1
              itemType: QUIZ
              itemOrder: 1
              isItemPassed: true
              itemRiskFlags:
                -
              itemDeadline: 1585392991000
              moduleName: "Chapter One: Why We Program (continued)"
              lessonId: AKJtt
              itemGrade: 100
              moduleId: AWp2B
              itemWeight: 9.17
              lessonName: "Review: Chapter 1"
            - itemId: RqkS3
              itemName: "Assignment: Write Hello World"
              itemType: LTI
              itemOrder: 2
              isItemPassed: true
              itemRiskFlags:
                -
              moduleName: "Chapter One: Why We Program (continued)"
              lessonId: D9XcC
              itemGrade: 100
              moduleId: AWp2B
              itemWeight: 8.26
              lessonName: "Assignment: Chapter 1"
        enrolledAt:
          description: Timestamp for user enrollment in the course.
          type: integer
          format: int64
          example: 1576734892000
        isCompleted:
          description: A boolean for course completion status. A course is marked as completed when the user has finished all graded assignments.
          type: boolean
          example: true
      example:
        completedAt: 1585392590000
        overallProgress: 72
        approxTotalLearningHrs: 64.41
        fullName: Joe Doe
        externalId: jdoe@gmail.com
        lastActivityAt: 1585392991000
        courseName: Programming for Everybody (Getting Started with Python)
        overallCourseGrade: 96.7
        id: jdoe@gmail.com~7A1yFTaREeWWBQrVFXqd1w
        riskFlags:
          -
        courseId: 7A1yFTaREeWWBQrVFXqd1w
        programId: Wl5ych5kEeWFIxLDnS6_kQ
        itemGradebooks:
          - itemId: WiLXL
            itemName: Chapter 1
            itemType: QUIZ
            itemOrder: 1
            isItemPassed: true
            itemRiskFlags:
              -
            itemDeadline: 1585392991000
            moduleName: "Chapter One: Why We Program (continued)"
            lessonId: AKJtt
            itemGrade: 100
            moduleId: AWp2B
            itemWeight: 9.17
            lessonName: "Review: Chapter 1"
          - itemId: RqkS3
            itemName: "Assignment: Write Hello World"
            itemType: LTI
            itemOrder: 2
            isItemPassed: true
            itemRiskFlags:
              -
            moduleName: "Chapter One: Why We Program (continued)"
            lessonId: D9XcC
            itemGrade: 100
            moduleId: AWp2B
            itemWeight: 8.26
            lessonName: "Assignment: Chapter 1"
        enrolledAt: 1576734892000
        isCompleted: true

    CourseItemGradebook:
      type: object
      properties:
        itemId:
          description: Unique identifier for an item in a course.
          type: string
          example: RqkS3
        itemName:
          description: Name of the item.
          type: string
          example: "Assignment: Write Hello World"
        itemType:
          description: Type of the course item (e.g. quiz, peerReview).
          type: string
          enum: [ "QUIZ", "PEER_REVIEW", "STAFF_GRADED_ASSIGNMENT", "PROGRAMMING_ASSIGNMENT", "DISCUSSION_PROMPT", "LTI", "UNKNOWN" ]
          example: QUIZ
        itemDeadline:
          description: Timestamp of the personalized item deadline for the learner (UNIX epoch time in milliseconds)
          type: integer
          format: int64
          nullable: true
          example: 1585392991000
        moduleName:
          description: Name of the module
          type: string
          example: "Chapter One: Why We Program (continued)"
        moduleId:
          description: Unique identifier for the module
          type: string
          example: AWp2B
        lessonName:
          description: Name of the lesson
          type: string
          example: "Assignment: Chapter 1"
        lessonId:
          description: Unique identifier for the lesson
          type: string
          example: D9XcC
        itemWeight:
          description: A number between 0 to 100.
          type: number
          format: float
          example: 8.26
        itemOrder:
          description: The order of the item within the course branch.
          type: integer
          format: int32
          example: 1
        isItemPassed:
          description: Boolean; NULL if not attempted
          type: boolean
          nullable: true
          example: true
        itemGrade:
          description: A number between 0 to 100; NULL if not attempted
          type: number
          format: float
          nullable: true
          example: 100
        itemRiskFlags:
          description: An array of item-level risk flags. If a learner has failed the assignment because of confirmed plagiarism, only CONFIRMED_PLAGIARISM is included.
          type: array
          enum: [CONFIRMED_PLAGIARISM, SUSPECTED_PLAGIARISM, FAILED_ASSIGNMENT]
          items:
            type: string
          example: CONFIRMED_PLAGIARISM
      example:
        itemId: WiLXL
        itemName: Chapter 1
        itemType: QUIZ
        itemOrder: 1
        isItemPassed: true
        itemRiskFlags:
          -
        itemDeadline: 1585392991000
        moduleName: "Chapter One: Why We Program (continued)"
        lessonId: AKJtt
        itemGrade: 100
        moduleId: AWp2B
        itemWeight: 9.17
        lessonName: "Review: Chapter 1"

    UserMembershipResponse:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/UserMembership'
        paging:
          $ref: '#/components/schemas/Pagination'
        linked:
          type: object
      example:
        elements:
          - fullName: John Doe
            email: johndoe@domain.com
            externalId: johndoe-sample-domain-ID
            programId: 4LVhtQQNEemZUwrw3z8SgA
            id: 4LVhtQQNEemZUwrw3z8SgA~johndoe-sample-domain-ID
        paging: { }
        linked: { }

    UserMembership:
      type: object
      properties:
        fullName:
          type: string
          description: Full name of the learner.
          example: John Doe
        email:
          type: string
          description: The email address of the user.
          example: johndoe@domain.com
        externalId:
          type: string
          description: Unique external identifier for a user.
          example: johndoe-sample-domain-ID
        programId:
          type: string
          description: Unique identifier for a learning program.
          example: 4LVhtQQNEemZUwrw3z8SgA
        id:
          type: string
          description: The unique identifier that corresponds to the composed ID in the URL of the request.
          example: 4LVhtQQNEemZUwrw3z8SgA~johndoe-sample-domain-ID

    ProgramMembershipsResponse:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ProgramMembership'
        paging:
          $ref: '#/components/schemas/Pagination'
      example:
        elements:
          - joinedAt: 1602490628732
            id: p5Zp4c0nEea0zwpn63qgwg~413861904646
            programId: p5Zp4c0nEea0zwpn63qgwg
            externalId: 413861904646
            fullName: John Doe
            email: jdoe@domain.com
        paging:
          next: 10
          total: 245

    ProgramMembership:
      type: object
      properties:
        joinedAt:
          type: integer
          format: int64
          description: Timestamp for when the user joined the program (UNIX epoch time in milliseconds).
          example: 1602490628732
        id:
          type: string
          description: Unique identifier of the membership in the format "programId~externalId".
          example: p5Zp4c0nEea0zwpn63qgwg~413861904646
        programId:
          type: string
          description: Unique identifier for a learning program.
          example: p5Zp4c0nEea0zwpn63qgwg
        externalId:
          type: string
          description: The unique external identifier for a user, based on SSO credentials or manually set value when inviting the learner.
          example: 413861904646
        fullName:
          type: string
          description: Full name of the learner.
          example: John Doe
        email:
          type: string
          description: The email address of the user.
          example: jdoe@domain.com

    MultipleUserInvitationResponse:
      type: object
      properties:
        programId:
          type: string
          description: Unique identifier for a learning program.
          example: p5Zp4c0nEea0zwpn63qgwg
        successful:
          type: array
          items:
            $ref: '#/components/schemas/UserInvitation'
        failed:
          type: array
          items:
            $ref: '#/components/schemas/FailedUserInvitation'
      example:
        programId: p5Zp4c0nEea0zwpn63qgwg
        successful:
          - invitationId: y9OX9K8-TZGiWXKg8ZEzng
            externalId: 413861904646
            fullName: John Doe
            email: jdoe@domain.com
        failed:
          - errorCode: INVITATION_ALREADY_EXISTS
            message: An active invitation already exists for jdoe_2@domain.org in program _4R9y4T_EeiCTg7PxGqkyA
            externalId: 413861904647
            fullName: John Doe 2
            email: jdoe_2@domain.com

    Invitee:
      type: object
      properties:
        externalId:
          description: The unique external identifier for a user.
          type: string
          example: 413861904646
        fullName:
          description: The full name of the user.
          type: string
          example: John Doe
        email:
          description: The email address of the user.
          type: string
          example: jdoe@domain.com
      example:
        externalId: 413861904646
        fullName: John Doe
        email: jdoe@domain.com

    UserInvitation:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the invitation in the format "programId~externalId".
          example: p5Zp4c0nEea0zwpn63qgwg~413861904646
        programId:
          type: string
          description: Unique identifier for a learning program.
          example: p5Zp4c0nEea0zwpn63qgwg
        externalId:
          type: string
          description: The unique external identifier for a user, based on SSO credentials or manually set value when inviting the learner.
          example: 413861904646
        fullName:
          type: string
          description: Full name of the learner.
          example: John Doe
        email:
          type: string
          description: The email address of the user.
          example: jdoe@domain.com

    FailedUserInvitation:
      type: object
      properties:
        errorCode:
          type: string
          description: Error code representing the reason for the invitation failure.
          example: INVITATION_ALREADY_EXISTS
        message:
          type: string
          description: A message explaining the reason for the invitation failure.
          example: An active invitation already exists for jdoe_2@domain.org in program _4R9y4T_EeiCTg7PxGqkyA
        externalId:
          type: string
          description: The unique external identifier for a user, based on SSO credentials or manually set value when inviting the learner.
          example: 413861904647
        fullName:
          type: string
          description: Full name of the learner.
          example: John Doe 2
        email:
          type: string
          description: The email address of the user.
          example: jdoe_2@domain.com

    PendingInvitation:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          description: Timestamp for when the invitation was created (UNIX epoch time in milliseconds).
          example: 1602490628732
        id:
          type: string
          description: Unique identifier of the invitation in the format "programId~externalId".
          example: p5Zp4c0nEea0zwpn63qgwg~413861904646
        programId:
          type: string
          description: Unique identifier for a learning program.
          example: p5Zp4c0nEea0zwpn63qgwg
        externalId:
          type: string
          description: The unique external identifier for a user, based on SSO credentials or manually set value when inviting the learner.
          example: 413861904646
        fullName:
          type: string
          description: Full name of the learner.
          example: John Doe
        email:
          type: string
          description: The email address of the user.
          example: jdoe@domain.com
      example:
        createdAt: 1602490628732
        id: p5Zp4xs32adzwpn63qgwg~12312312312
        programId: program_id
        externalId: 413861904646
        fullName: John Doe
        email: jdoe@domain.com

    ExternalSkillset:
      type: object
      properties:
        skillsetName:
          type: string
          description: Name of skillset
          example: Testing for Software Engineers
        skillsetId:
          type: string
          description: Unique identifier of the SkillSet
          example: IZWq23fdgdfafKX12w
        skillsetDescription:
          type: string
          description: Description of the SkillSet
          example: Testing for Software Engineers helps you to upskill in software testing. This SkillSet provides you with content recommendations that will allow you to excel in a single target skill for career advancement. Move your software testing skill score from beginner to intermediate.
        programId:
          type: string
          description: Unique identifier for your learning program
          example: your_program_id
        programName:
          type: string
          description: Name of your learning program
          example: Engineering Program
        deeplink:
          type: string
          description: Dedicated URL for your learners to access the SkillSet from your LMS or LXP
          example: https://www.coursera.org/programs/learning-program-itfhe/skillsets/accountant-f0srr?apiSource=enterprise_external_api_skillsets&isExternal=true
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillTarget'
      example:
        skillsetName: Accountant
        skillsetId: IZWq23fdgdfafKX12w
        skillsetDescription: Accountant empowers you to reskill by revisiting core accounting operations. This SkillSet refreshes your knowledge of accounting principles and practices, spreadsheets, and data analysis tools. Choose from any of our content recommendations in 5 target skills. Move your skill score to the next level in accounting, communication, data analysis software, general accounting, and spreadsheet software.
        programId: your_program_id
        programName: Learning Program
        deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/accountant-f0asr?apiSource=enterprise_external_api_skillsets&isExternal=true
        skills:
          - skillName: Data Analysis Software
            skillId: data-analysis-software
            targetScore: 250
          - skillName: Accounting
            skillId: accounting
            targetScore: 425
          - skillName: Communication
            skillId: communication
            targetScore: 250           
          - skillName: Spreadsheet Software
            skillId: spreadsheet-software
            targetScore: 250           
          - skillName: General Accounting
            skillId: general-accounting
            targetScore: 100  

    ExternalSkillsets:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSkillset'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example:
        - skillsetName: Accountant
          skillsetId: IZWq23fdgdfafKX12w
          skillsetDescription: Accountant empowers you to reskill by revisiting core accounting operations. This SkillSet refreshes your knowledge of accounting principles and practices, spreadsheets, and data analysis tools. Choose from any of our content recommendations in 5 target skills. Move your skill score to the next level in accounting, communication, data analysis software, general accounting, and spreadsheet software.
          programId: your_program_id
          programName: Learning Program
          deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/accountant-f0asr?apiSource=enterprise_external_api_skillsets&isExternal=true
          skills:
            - skillName: Data Analysis Software
              skillId: data-analysis-software
              targetScore: 250
            - skillName: Accounting
              skillId: accounting
              targetScore: 425
            - skillName: Communication
              skillId: communication
              targetScore: 250           
            - skillName: Spreadsheet Software
              skillId: spreadsheet-software
              targetScore: 250           
            - skillName: General Accounting
              skillId: general-accounting
              targetScore: 100

    PaginationParams:
      type: object
      properties:
        total:
          type: integer
          format: int32
          description: total number of elements
          example: 1000
        nextPage:
          type: string
          description: the label for the next page of elements
          example: e3f5s9jf
        nextPageLink:
          type: string
          description: an api url that can directly make call to get next page elements
          example: https://api.coursera.com/ent/api/rest/v1/enterprise/programs/auvx5sf12ad78nvs/skillsets?limit=10&nextPage=e3f5s9jf
      example:
        total: 1000
        nextPage: e3f5s9jf
        nextPageLink: https://api.coursera.com/ent/api/rest/v1/enterprise/programs/auvx5sf12ad78nvs/skillsets?limit=10&nextPage=e3f5s9jf

    SkillTarget:
      type: object
      properties:
        skillName:
          type: string
          description: Name of skill
          example: Accounting
        skillId:
          type: string
          description: Unique identifier of the SkillSet
          example: accounting
        targetScore:
          type: integer
          format: int32
          description: Skill score required to fulfill Skill score requirement towards SkillSet progress
          example: 250
      example:
        skillName: Data Analysis Software
        skillId: data-analysis-software
        targetScore: 250

    ExternalProductRecommendation:
      type: object
      properties:
        name:
          type: string
          description: Name of the content recommendation
          example: Lean Software Development
        id:
          type: string
          description: Unique identifier of the content recommendation
          example: c20ET-asdsde-cXg
        productType:
          type: string
          description: Classification of the content recommendation. “course” or “specialization”
          example: Course
        logo:
          type: string
          description: Cover image of the content as displayed in Coursera
          example: https://coursera-university-assets.s3.amazonaws.com/2e/ad2fad2fdg73f/081ndyxhn3.png
        deeplink:
          type: string
          description: Dedicated URL for your learners to access the content from your LMS or LXP
          example: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~asdf3rg3&productId=c20ET-sef3fas-cXg&productType=course
      example: 
        name: Lean Software Development
        id: c20ET-asdsde-cXg
        productType: course
        logo: https://coursera-university-assets.s3.amazonaws.com/2e/ad2fad2fdg73f/081ndyxhn3.png
        deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~asdf3rg3&productId=c20ET-sef3fas-cXg&productType=course

    ExternalSkillRecommendation:
      type: object
      properties:
        skillName:
          type: string
          description: Name of the Skill within a SkillSet
          example: Software Testing
        skillId:
          type: string
          description: Unique id of the Skill within a SKillset
          example: software-testing
        programId:
          type: string
          description: Unique id of the program of your learning program
          example: your_program_id
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalProductRecommendation'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example: 
        skillName: Software Testing
        skillId: software-testing
        programId: your_program_id
        elements:
          - name: Software Development Lifecycle
            id: 9FGXduzMdasadfzYJCA
            productType: specialization
            logo: https://sdf143.cloudfront.net/17/6b66f0asdfxad85e33e8374f520/example.jpg
            deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~example&productId=9FGXduzMdasadfzYJCA&productType=s12n
          - name: Lean Software Development
            id: c20ET-asdsde-cXg
            productType: course
            logo: https://coursera-university-assets.s3.amazonaws.com/2e/ad2fad2fdg73f/081ndyxhn3.png
            deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~asdf3rg3&productId=c20ET-sef3fas-cXg&productType=course

    ExternalSkillsetRecommendation:
      type: object
      properties:
        skillsetName:
          type: string
          description: Name of skillset
          example: Accountant
        skillsetId:
          type: string
          description: Unique identifier of the SkillSet
          example: IZWq23fdgdfafKX12w
        programId:
          type: string
          description: Unique identifier of your learning program
          example: your_program_id
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalProductRecommendation'
        pagination:
          $ref: '#/components/schemas/PaginationParams'

      example:
        skillsetName: Testing for Software Engineers
        skillsetId: IZWq23fdgdfafKX12w
        programId: your_program_id
        elements:
          - name: Software Development Lifecycle
            id: 9FGXduzMdasadfzYJCA
            productType: specialization
            logo: https://sdf143.cloudfront.net/17/6b66f0asdfxad85e33e8374f520/example.jpg
            deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~example&productId=9FGXduzMdasadfzYJCA&productType=s12n
          - name: Lean Software Development
            id: c20ET-asdsde-cXg
            productType: course
            logo: https://coursera-university-assets.s3.amazonaws.com/2e/ad2fad2fdg73f/081ndyxhn3.png
            deeplink: https://www.coursera.org/programs/learning-program-itfhe/skillsets/testing-for-software-engineers-qfgzk/skill/software-testing?apiSource=enterprise_external_api_skillsets&isExternal=true&showMiniModal=true&collectionId=storedCollection~asdf3rg3&productId=c20ET-sef3fas-cXg&productType=course
        pagination:
          total: 1000
          nextPage: e3f5s9jf
          nextPageLink: https://api.coursera.com/ent/api/rest/v1/enterprise/programs/auvx5sf12ad78nvs/skillsets?limit=10&nextPage=e3f5s9jf

    ExternalSkillsetProgressByLearner:
      type: object
      properties:
        learnerName:
          type: string
          description: name of learner
          example: Jerry
        learnerEmail:
          type: string
          description: email of learner
          example: example@coursera.org
        learnerExternalUserId:
          type: string
          description: unique id of learner
          example: 63261a1fxxxxx818578fa
        elements:
          type: array
          items:
            $ref: '#/components/schemas/SkillsetProgress'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example:
        learnerName: Jerry
        learnerEmail: example@coursera.org
        learnerExternalUserId: 63261a1fxxxxx818578fa
        elements:
          - skillsetName: Software Engineer
            skillsetId: 9YIu5234234wrbiliZxQ
            progressPercent: 38
        pagination:
          total: 1
          nextPage: ""

    SkillsetProgress:
      type: object
      properties:
        skillsetName:
          type: string
          description: name of skillset
          example: Software Engineer
        skillsetId:
          type: string
          description: Unique identifier of SkillSet
          example: 9YIu5234234wrbiliZxQ
        progressPercent:
          type: integer
          format: int32
          description: "[0,100] range of learner’s Skillset progress. A value of 100 means they have completed the SkillSet by hitting the required Skills score target"
          example: 38
      example:
        skillsetName: Software Engineer
        skillsetId: 9YIu5234234wrbiliZxQ
        progressPercent: 38

    ExternalLearnerWithSkillScore:
      type: object
      properties:
        learnerEmail:
          type: string
          description: email of learner
          example: example@coursera.org
        learnerName:
          type: string
          description: name of learner
          example: jerry
        externalUserId:
          type: string
          description: Unique id of learner
          example: 63261a1fxxxxx818578fa
        skillScore:
          type: integer
          format: int32
          description: Learner’s Skill score for the Skill
          example: 315
        skillProficiency:
          type: string
          description: "Learner’s skill level. Can be one of the following values: CONVERSANT, BEGINNER, INTERMEDIATE, ADVANCED"
          example: INTERMEDIATE
      example:
        learnerEmail: example@coursera.org
        learnerName: Jerry
        externalUserId: 63261a1fxxxxx818578fa
        skillScore: 315
        skillProficiency: INTERMEDIATE

    ExternalSkillScorePerLearner:
      type: object
      properties:
        skillId:
          type: string
          description: id of skill
          example: Computer Programming
        skillName:
          type: string
          description: name of skill
          example: computer-programming
        skillDescription:
          type: string
          description: description of skill
          example: Learn computer programming to develop software solutions. From data and logic to software engineering, you'll be equipped for building business applications, video games, and more.
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLearnerWithSkillScore'
      example: 
        skillId: computer-programming
        skillName: Computer Programming
        skillDescription: Learn computer programming to develop software solutions. From data and logic to software engineering, you'll be equipped for building business applications, video games, and more.
        elements:
          - learnerEmail: example@coursera.org
            learnerName: Jerry
            externalUserId: 63261a1fxxxxx818578fa
            skillScore: 315
            skillProficiency: INTERMEDIATE

    ExternalLearnerWithSkillScores:
      type: object
      properties:
        learnerEmail:
          type: string
          description: email of learner
          example: example@coursera.org
        learnerName:
          type: string
          description: name of learner
          example: Jerry
        externalUserId:
          type: string
          description: unique id of learner 
          example: 63261a1fxxxxx818578fa
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSkillWithSkillScore'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example: 
        learnerEmail: example@coursera.org
        learnerName: Jerry
        externalUserId: 63261a1fxxxxx818578fa
        elements:
          - skillId: computer-programming
            skillName: Computer Programming
            skillDescription: Learn computer programming to develop software solutions. From data and logic to software engineering, you'll be equipped for building business applications, video games, and more.
            skillScore: 315
            skillProficiency: INTERMEDIATE
          - skillId: software-engineering
            skillName: Software Engineering
            skillDescription: Learn software engineering to build modern computer applications. From data structures and logic to development tools and techniques, you'll be equipped to design, develop, and maintain software.
            skillScore: 100
            skillProficiency: BEGINNER
        pagination:
          total: 2
          nextPage: ""

    ExternalSkillWithSkillScore:
      type: object
      properties:
        skillId:
          type: string
          description: id of skill
          example: computer-programming
        skillName:
          type: string
          description: name of skill
          example: Computer Programming
        skillDescription:
          type: string
          description: description of skill
          example: Learn computer programming to develop software solutions. From data and logic to software engineering, you'll be equipped for building business applications, video games, and more.
        skillScore:
          type: integer
          format: int32
          description: Learner’s Skill score for the Skill
          example: 315
        skillProficiency:
          type: string
          description: "Learner’s skill level. Can be one of the following values: CONVERSANT, BEGINNER, INTERMEDIATE, ADVANCED"
          example: ADVANCED
      example:
        skillId: computer-programming
        skillName: Computer Programming
        skillDescription: Learn computer programming to develop software solutions. From data and logic to software engineering, you'll be equipped for building business applications, video games, and more.
        skillScore: 315
        skillProficiency: ADVANCED

    ExternalEnterpriseUserSkill:
      type: object
      properties:
        skillId:
          type: string
          description: id of skill
          example: computer-programming
        skillName:
          type: string
          description: name of skill
          example: Computer Programming
        score:
          type: integer
          format: int32
          description: Learner’s Skill score for the Skill
          example: 315
        proficiency:
          type: string
          description: "Learner’s skill level. Can be one of the following values: CONVERSANT, BEGINNER, INTERMEDIATE, ADVANCED"
          example: ADVANCED
      example:
        skillId: computer-programming
        skillName: Computer Programming
        score: 315
        proficiency: ADVANCED
        
    ExternalEnterpriseUserSkillset:
      type: object
      properties:
        userName:
          type: string
          description: name of learner
          example: Jerry
        userEmail:
          type: string
          description: email of learner
          example: example@coursera.org
        organizationId:
          type: string
          description: id of organization
          example: your_org_id
        skillsetId:
          type: string
          description: id of skillset
          example: 9YIu5234234wrbiliZxQ
        progressPercentage:
          type: integer
          format: int32
          description: "[0,100] range of learner’s Skillset progress. A value of 100 means they have completed the SkillSet by hitting the required Skills score target"
          example: 38
        latestProgressMadeAt:
          type: integer
          format: int64
          description: Timestamp for when the learner takes progress on the skill content.
          example: 1602490628732
        programIds:
          type: array
          description: a list of program ids
          items:
            type: string
          example:
            - program_id_1
              program_id_2
              program_id_3
        enterpriseUserSkillList:
          type: array
          items:
            $ref: '#/components/schemas/ExternalEnterpriseUserSkill'
        skillsetTargetSkillScores:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSkillsetTargetSkillScore'
      example: 
        userName: Jerry
        userEmail: example@coursera.org
        organizationId: your_org_id
        skillId: computer-programming
        progressPercentage: 38
        latestProgressMadeAt: 1602490628732
        programIds:
          - program_id_1
            program_id_2
            program_id_3
        enterpriseUserSkillList:
          - skillId: computer-programming
            skillName: Computer Programming
            score: 315
            proficiency: ADVANCED
        skillsetTargetSkillScores:
          - skillId: computer-programming
            targetProficiencyScore: 100

    ExternalSkillsetTargetSkillScore:
      type: object
      properties:
        skillId:
          type: string
          description: id of skill
          example: computer-programming
        targetProficiencyScore:
          type: integer
          format: int32
          description: "[0,100] range of target proficiency"
          example: 100

    ExternalUserSkillsetReport:
      type: object
      properties:
        enterpriseUserSkillsets:
          type: array
          items:
            $ref: '#/components/schemas/ExternalEnterpriseUserSkillset'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example:
        enterpriseUserSkillsets:
          - userName: Jerry
            userEmail: example@coursera.org
            organizationId: your_org_id
            skillId: computer-programming
            progressPercentage: 38
            latestProgressMadeAt: 1602490628732
            programIds:
              - program_id_1
                program_id_2
                program_id_3
            enterpriseUserSkillList:
              - skillId: computer-programming
                skillName: Computer Programming
                score: 315
                proficiency: ADVANCED
            skillsetTargetSkillScores:
              - skillId: computer-programming
                targetProficiencyScore: 100
        pagination:
          total: 1
          nextPage: ""

    ExternalSkillsetWithPrograms:
      type: object
      properties:
        skillsetName:
          type: string
          description: name of skillset
          example: Software Engineer
        skillsetId:
          type: string
          description: id of skillset
          example: 9YIu5234234wrbiliZxQ
        skillsetDescription:
          type: string
          description: Description of the SkillSet
          example: Accountant empowers you to reskill by revisiting core accounting operations. This SkillSet refreshes your knowledge of accounting principles and practices, spreadsheets, and data analysis tools. Choose from any of our content recommendations in 5 target skills. Move your skill score to the next level in accounting, communication, data analysis software, general accounting, and spreadsheet software.
        programs:
          type: array
          items:
            $ref: '#/components/schemas/SkillsetProgram'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillTarget'
      example:
        skillsetName: Software Engineer
        skillsetId: 9YIu5234234wrbiliZxQ
        skillsetDescription: Accountant empowers you to reskill by revisiting core accounting operations. This SkillSet refreshes your knowledge of accounting principles and practices, spreadsheets, and data analysis tools. Choose from any of our content recommendations in 5 target skills. Move your skill score to the next level in accounting, communication, data analysis software, general accounting, and spreadsheet software.
        programs:
          - programId: your_program_id
            programName: Example program name
            skillsetDeeplink: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
        skills:
          - skillName: Data Analysis Software
            skillId: data-analysis-software
            targetScore: 250

    ExternalSkillsetsWithPrograms:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSkillsetWithPrograms'
        pagination:
          $ref: '#/components/schemas/PaginationParams'
      example: 
        elements:
          - skillsetName: Software Engineer
            skillsetId: 9YIu5234234wrbiliZxQ
            skillsetDescription: Accountant empowers you to reskill by revisiting core accounting operations. This SkillSet refreshes your knowledge of accounting principles and practices, spreadsheets, and data analysis tools. Choose from any of our content recommendations in 5 target skills. Move your skill score to the next level in accounting, communication, data analysis software, general accounting, and spreadsheet software.
            programs:
              - programId: your_program_id
                programName: Example program name
                skillsetDeeplink: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
            skills:
              - skillName: Data Analysis Software
                skillId: data-analysis-software
                targetScore: 250
        pagination:
          total: 1
          nextPage: ""

    SkillsetProgram:
      type: object
      properties:
        programId:
          type: string
          description: id of program
          example: your_program_id
        programName:
          type: string
          description: name of program
          example: Example program name
        skillsetDeeplink:
          type: string
          description: Dedicated URL for your learners to access the skillset from your LMS or LXP
          example: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9
      example:
        programId: your_program_id
        programName: Example program name
        skillsetDeeplink: https://www.coursera.org/programs/learning-program-uzmjj?showMiniModal=true&attemptSSOLogin=true&productType=course&productId=gawUVgp9EeuyHQ758rw-Yw&itemId=6chA9

  # =========== Reusable Error Definitions (begin) ===========
    400_BadRequest:
      type: object
      nullable: false
      oneOf:
        - $ref: '#/components/schemas/400_BadRequest_Variant_01'
        - $ref: '#/components/schemas/400_BadRequest_Variant_02'
        - $ref: '#/components/schemas/400_BadRequest_Variant_03'
        - $ref: '#/components/schemas/400_BadRequest_Variant_04'
    400_BadRequest_Variant_01:
      properties:
        message:
          type: string
          description: Extra information describing the error
          example: Invalid id 123~ABC
        statusCode:
          type: integer
          description: Http StatusCode for BadRequest status
          example: 400
    400_BadRequest_Variant_02:
      properties:
        msg:
          type: string
          example: "Routing error: Improperly formatted value for parameter 'programIds'"
    400_BadRequest_Variant_03:
      properties:
        errorCode:
          type: string
          description: A code by which the error can be identified
          example: SOME_ERROR_CODE
        message:
          type: string
          description: Extra information describing the error
          example: Some message describing the error
        details:
          type: string
          description: Extra information providing more details about the error
          example: null
    400_BadRequest_Variant_04:
      properties:
        error:
          type: object
          description: A code by which the error can be identified
          properties:
            timestamp:
              type: string
              description: Timestamp of when the error occurred
              example: "2023-11-23T16:33:30.280653264"
            message:
              type: string
              description: Extra information describing the error
              example: "program id ${programId} is invalid"
            type:
              type: string
              description: A String Error Code
              example: INVALID_ARGUMENT
            path:
              type: string
              description: The path of the request that led to the error
              example: "/api/rest/v1/enterprise/programs/${programId}/skillsets"

    401_Unauthorized:
      type: object
      nullable: false
      properties:
        fault:
          $ref: '#/components/schemas/Fault'

    403_Forbidden:
      type: object
      nullable: false
      oneOf:
        - $ref: '#/components/schemas/403_Forbidden_Variant_01'
        - $ref: '#/components/schemas/403_Forbidden_Variant_02'
    403_Forbidden_Variant_01:
      properties:
        errorCode:
          type: string
          description: A code by which the error can be identified
          example: Not Authorized
        message:
          type: string
          description: Extra information describing the error
          example: Access is denied
        details:
          type: string
          description: Extra information providing more details about the error
          example: null
    403_Forbidden_Variant_02:
      properties:
        timestamp:
          type: string
          description: Timestamp of when the error occurred
          example: "2023-11-23T19:06:35.066+00:00"
        status:
          type: string
          description: Http Status Code
          example: 403
        error:
          type: string
          description: Description of the error
          example: Forbidden
        path:
          type: string
          description: The path of the request that led to the error
          example: "/api/rest/v1/enterprise/programs/${programId}/skills/${skillId}/scores"

    404_NotFound:
      type: object
      nullable: false
      oneOf:
        - $ref: '#/components/schemas/404_NotFound_Variant_01'
        - $ref: '#/components/schemas/404_NotFound_Variant_02'
        - $ref: '#/components/schemas/404_NotFound_Variant_03'
        - $ref: '#/components/schemas/404_NotFound_Variant_04'
    404_NotFound_Variant_01:
      properties:
        message:
          type: string
          description: Extra information describing the error
          example: Not Found
        statusCode:
          type: integer
          description: Http StatusCode for NotFound status
          example: 404
    404_NotFound_Variant_02:
      properties:
        errorCode:
          type: string
          description: A code by which the error can be identified
          example: Not Authorized
        message:
          type: string
          description: Extra information describing the error
          example: The requested content ID is not in any programs of this organization.
        details:
          type: string
          description: Extra information providing more details about the error
          example: null
    404_NotFound_Variant_03:
      properties:
        timestamp:
          type: string
          description: Timestamp of when the error occurred
          example: "2023-11-23T16:34:16.910+00:00"
        status:
          type: string
          description: Http Status Code
          example: 404
        error:
          type: string
          description: Description of the error
          example: Not Found
        path:
          type: string
          description: The path of the request that led to the error
          example: "/api/rest/v1/enterprise/programs/${programId}/skillsets"
    404_NotFound_Variant_04:
      properties:
        error:
          type: object
          description: A code by which the error can be identified
          properties:
            timestamp:
              type: string
              description: Timestamp of when the error occurred
              example: "2023-11-23T17:30:25.487355235"
            message:
              type: string
              description: Extra information describing the error
              example: "could not find skillset with id ${skillsetId}. Original gRPC status code: UNIMPLEMENTED"
            type:
              type: string
              description: A String Error Code
              example: NOT_FOUND
            path:
              type: string
              description: The path of the request that led to the error
              example: "/api/rest/v1/enterprise/programs/${programId}/skillsets/${skillsetId}/skills/${skillId}/recommendations"

    Fault:
      type: object
      description: Extra information describing the error
      nullable: false
      properties:
        faultstring:
          type: string
          description: Human readable description of the error
        detail:
          $ref: '#/components/schemas/FaultDetail'
    FaultDetail:
      type: object
      description: Extra information regarding the error
      nullable: false
      properties:
        errorcode:
          type: string

  # =========== / Reusable Error Definitions (end) ===========


  # =========== / Reusable Examples (begin) ===========
  examples:
    400_BadRequest_Variant_01_DEFAULT:
      value: {
        "message": "Invalid id 123~ABC",
        "statusCode": 400
      }
    400_BadRequest_Variant_02_DEFAULT:
      value: {
        "msg": "Routing error: Improperly formatted value for parameter 'programIds'"
      }
    400_BadRequest_Variant_03_DEFAULT:
      value: {
        "errorCode": "SOME_ERROR_CODE",
        "message": "message describing the error",
        "details": null
      }
    400_BadRequest_Variant_03_PROGRAM_ENROLLMENTS_INVALID_JSON:
      value: {
        "errorCode": null,
        "message": "JSON didn't validate",
        "details": {
          "/externalId": [
            {
              "message": "ERROR :: /externalId :: field is required but not found and has no default value",
              "args": []
            }
          ],
          "/contentId": [
            {
              "message": "ERROR :: /contentId :: field is required but not found and has no default value",
              "args": []
            }
          ]
        }
      }
    400_BadRequest_Variant_03_PROGRAM_MEMBERSHIPS_INVALID_JSON:
      value: {
        "errorCode": null,
        "message": "JSON didn't validate",
        "details": {
          "/fullName": [
            {
              "message": "ERROR :: /fullName :: field is required but not found and has no default value",
              "args": []
            }
          ],
          "/externalId": [
            {
              "message": "ERROR :: /externalId :: field is required but not found and has no default value",
              "args": []
            }
          ]
        }
      }
    400_BadRequest_Variant_03_PROGRAM_INVITATIONS_INVALID_JSON:
      value: {
        "errorCode": null,
        "message": "JSON didn't validate",
        "details": {
          "/invitees(0)/fullName": [
            {
              "message": "ERROR :: /invitees/0/fullName :: field is required but not found and has no default value",
              "args": []
            }
          ],
          "/invitees(0)/externalId": [
            {
              "message": "ERROR :: /invitees/0/externalId :: field is required but not found and has no default value",
              "args": []
            }
          ],
          "/invitees(1)/fullName": [
            {
              "message": "ERROR :: /invitees/1/fullName :: field is required but not found and has no default value",
              "args": []
            }
          ],
          "/invitees(1)/email": [
            {
              "message": "ERROR :: /invitees/1/email :: field is required but not found and has no default value",
              "args": []
            }
          ]
        }
      }
    400_BadRequest_Variant_03_USER_EMAIL_NOT_VERIFIED:
      value: {
        "errorCode": "USER_EMAIL_NOT_VERIFIED",
        "message": "User with email address ${userEmail} has not been verified",
        "details": null
      }
    400_BadRequest_Variant_03_PROGRAM_INVITEE_ERROR_EXISTING_INVITATION_FOR_EMAIL:
      value: {
        "errorCode": "PROGRAM_INVITEE_ERROR_EXISTING_INVITATION_FOR_EMAIL",
        "message": "Invitation for program ${programId} and email ${userEmail} already exists.",
        "details": null
      }
    400_BadRequest_Variant_04_DEFAULT:
      value: {
        "error": {
          "timestamp": "2023-11-23T16:33:30.280653264",
          "message": "error message description",
          "type": "INVALID_ARGUMENT",
          "path": "/api/rest/v1/enterprise/path/to/request"
        }
      }

    401_Unauthorized_ACCESS_TOKEN_INVALID:
      value: {
        "fault": {
          "faultstring": "Invalid Access Token",
          "detail": {
            "errorcode": "keymanagement.service.invalid_access_token"
          }
        }
      }
    401_Unauthorized_ACCESS_TOKEN_EXPIRED:
      value: {
        "fault": {
          "faultstring": "Access Token expired",
          "detail": {
            "errorcode": "keymanagement.service.access_token_expired"
          }
        }
      }

    403_Forbidden_Variant_01_DEFAULT:
      value: {
        "errorCode": "Not Authorized",
        "message": "Access is denied",
        "details": null
      }
    403_Forbidden_Variant_02_DEFAULT:
      value: {
        "timestamp": "2023-11-23T19:04:06.226+00:00",
        "status": 403,
        "error": "Forbidden",
        "path": "/api/rest/v1/enterprise/path/to/request"
      }

    404_NotFound_Variant_01_DEFAULT:
      value: {
        "message": "Not Found",
        "statusCode": 404
      }
    404_NotFound_Variant_02_CONTENT_ID_NOT_IN_ORG:
      value: {
        "errorCode": "CONTENT_ID_NOT_IN_ORG",
        "message": "The requested content ID is not in any programs of this organization.",
        "details": null
      }
    404_NotFound_Variant_02_COURSE_NOT_IN_PROGRAM:
      value: {
        "errorCode": "COURSE_NOT_IN_PROGRAM",
        "message": "Course ${courseId} is not available in program ${programId}.",
        "details": null
      }
    404_NotFound_Variant_02_USER_NOT_FOUND_IN_PROGRAM:
      value: {
        "errorCode": "USER_NOT_FOUND_IN_PROGRAM",
        "message": "User ${external_id} not found in program ${programId}",
        "details": null
      }
    404_NotFound_Variant_02_NO_PROGRAM_MEMBERSHIP:
      value: {
        "errorCode": "notFound",
        "message": "not found",
        "details": null
      }
    404_NotFound_Variant_03_DEFAULT:
      value: {
        "timestamp": "2023-11-23T16:34:16.910+00:00",
        "status": 404,
        "error": "Not Found",
        "path": "/api/rest/v1/enterprise/path/to/request"
      }
    404_NotFound_Variant_04_DEFAULT:
      value: {
        "error": {
          "timestamp": "2023-11-23T17:30:25.487355235",
          "message": "error message description",
          "type": "NOT_FOUND",
          "path": "/api/rest/v1/enterprise/path/to/request"
        }
      }
  # =========== / Reusable Examples (end) ===========


  # =========== / Reusable Responses (begin) ===========
  responses:
    ERROR_400:
      description: Response returned when the request is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400_BadRequest'
    ERROR_401:
      description: Response returned when the request could not be authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401_Unauthorized'
          examples:
            variant_01:
              $ref: '#/components/examples/401_Unauthorized_ACCESS_TOKEN_INVALID'
            variant_02:
              $ref: '#/components/examples/401_Unauthorized_ACCESS_TOKEN_EXPIRED'
    ERROR_403:
      description: Response returned when the request was authenticated, but not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/403_Forbidden'
    ERROR_404:
      description: Response returned when the requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404_NotFound'
